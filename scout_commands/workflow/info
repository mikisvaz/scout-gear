#!/usr/bin/env ruby

require 'scout'

$0 = "scout #{$previous_commands.any? ? $previous_commands*" " + " " : "" }#{ File.basename(__FILE__) }" if $previous_commands

options = SOPT.setup <<EOF

Show info from job

$ #{$0} [<options>] <step_path>

-h--help Print this help
-i--inputs Pretty print the inputs
-ri--recursive_inputs Pretty print the inputs (recursively)
EOF
if options[:help]
  if defined? scout_usage
    scout_usage 
  else
    puts SOPT.doc
  end
  exit 0
end

path = ARGV.first
raise MissingParameterException.new :step_path if path.nil?
step = Step.load(path.dup)

if options[:inputs]
  names, values = step.info.values_at :input_names, :inputs
  names.zip(values).each do |name,value|
    puts [Log.color(:title, name), Log.fingerprint(value)] * " = "
  end
elsif options[:recursive_inputs]
  step.recursive_inputs.each do |name,value|
    puts [Log.color(:title, name), Log.fingerprint(value)] * " = "
  end
else
  step.info.each do |k,v|
    case v
    when nil
      next
    when Exception
      puts Log.color(:title, "Exception")
      Log.exception v
    else
      puts [Log.color(:title, k), Log.fingerprint(v)] * " = "
    end
  rescue
    next
  end
end

