scout-gear=/$PWD filter="*.rb *.yaml" {
 Rakefile
 bin=bin filter="*"{
  scout
 }
 lib=lib {
  scout=scout{
   workflow.rb
   workflow=workflow{
    definition.rb
    documentation.rb
    usage.rb
    util.rb
    step.rb
    step=step{
     config.rb
     dependencies.rb
     file.rb
     info.rb
     load.rb
     progress.rb
     provenance.rb
     children.rb
     status.rb
     inputs.rb
     archive.rb
    }
    task.rb
    task=task{
     dependencies.rb
     inputs.rb
    }
    deployment.rb
    deployment=deployment{
     trace.rb
     orchestrator.rb
    }
   }
   semaphore.rb
   work_queue.rb
   work_queue=work_queue{
    socket.rb
    worker.rb
   }

   persist=persist{
    engine.rb
    engine=engine{
     tokyocabinet.rb
     fix_width_table.rb
     tkrzw.rb
     packed_index.rb
     sharder.rb
    }
    tsv.rb
    tsv=tsv{
     adapter.rb
     serialize.rb
     adapter=adapter{
      base.rb

      fix_width_table.rb
      packed_index.rb
      tkrzw.rb
      tokyocabinet.rb
      sharder.rb
     }
    }
   }

   tsv.rb
   tsv=tsv{
    util.rb
    util=util{
     filter.rb
     melt.rb
     process.rb
     reorder.rb
     select.rb
     sort.rb
     unzip.rb
    }
    entity.rb
    parser.rb
    dumper.rb
    transformer.rb
    index.rb
    traverse.rb
    attach.rb
    change_id.rb
    change_id=change_id{
     translate.rb
    }
    annotation.rb
    annotation=annotation{
     repo.rb
    }
    path.rb
    stream.rb
    open.rb
    csv.rb
   }
   entity.rb
   entity=entity{
    property.rb
    object.rb
    format.rb
    identifiers.rb
   }
   association.rb
   association=association{
    fields.rb
    index.rb
    item.rb
   }

   offsite.rb
   offsite=offsite{
    ssh.rb
    sync.rb
    step.rb
   }
  }
  scout-gear.rb
  workflow-scout.rb
  rbbt-scout.rb
  scout.rb
 }
 scout_commands=scout_commands filter="*"{
  rbbt
  alias
  find
  glob
  log
  doc
  update
  template
  offsite
  workflow=workflow{
   task
   list
   info
   write_info
   install
   trace
   prov
  }
  batch=batch{
   list
   clean
  }
  resource=resource{
   produce
  }
 }
 test=test {
  test_helper.rb
  test_scout-gear.rb
  test_scout.rb
  data=data{
   person=person{
   }
  }
  scout=scout{
   test_association.rb
   test_entity.rb
   test_offsite.rb
   test_semaphore.rb
   test_tsv.rb
   test_workflow.rb
   test_work_queue.rb
   work_queue=work_queue{
    test_socket.rb
    test_worker.rb
   }
   workflow=workflow{
    test_definition.rb
    test_documentation.rb
    test_step.rb
    test_task.rb
    test_usage.rb
    test_util.rb
    step=step{
     test_dependencies.rb
     test_info.rb
     test_load.rb
     test_provenance.rb
     test_status.rb
    }
    task=task{
     test_dependencies.rb
     test_inputs.rb
    }
    deployment=deployment{
     test_orchestrator.rb
    }
   }
   tsv=tsv{
    test_annotation.rb
    test_attach.rb
    test_change_id.rb
    test_csv.rb
    test_dumper.rb
    test_entity.rb
    test_index.rb
    test_open.rb
    test_parser.rb
    test_persist.rb
    test_stream.rb
    test_transformer.rb
    test_traverse.rb
    test_util.rb
    util=util{
     test_filter.rb
     test_melt.rb
     test_process.rb
     test_reorder.rb
     test_select.rb
     test_sort.rb
     test_unzip.rb
    }
    persist=persist{
     test_adapter.rb
     test_fix_width_table.rb
     test_tkrzw.rb
     test_tokyocabinet.rb
    }
   }
   offsite=offsite{
    test_ssh.rb
    test_step.rb
    test_sync.rb
    test_task.rb
   }
  }
 }
 share=share{
  software=software{
   install_helpers
  }
  templates=templates{
   workflow.rb
  }
 }
}
